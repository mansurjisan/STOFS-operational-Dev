#!/bin/sh

#############################
# Preliminary data setup step
#############################
set -xa

# ##############################
# SET SHELL PROCESSING VARIABLES
# ##############################
export PS4='$SECONDS + '
date

##########################
# Specify NET and RUN name
##########################
export NET=${NET:-stofs}
export RUN=${RUN:-stofs_2d_glo}

export RUN_ENVIR=${RUN_ENVIR:-test}

##########################################################
# obtain unique process id (pid) and make temp directories
##########################################################
export pid=$$
#export DATAROOT=${DATAROOT:-/lfs/h1/ops/${RUN_ENVIR}/tmp}
#export DATA=${DATA:-${DATAROOT}/${jobid}}
export DATA=${DATA:-${HOMEstofs}/work.${pid}}

mkdir $DATA
cd $DATA

export cycle=t${cyc}z

##################
# File To Log Msgs
##################
#export jlogfile=${jlogfile:-${DATA}/jlogfile.${jobid}}
export jlogfile=${jlogfile:-${DATA}/jlogfile.${pid}}

#####################################
# Determine Job Output Name on System
#####################################
export pgmout="OUTPUT.$$"

##############################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
##############################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDECF=${SENDECF:-NO}

export DBN_ALERT_TYPE=${DBN_ALERT_TYPE:-STOFS_GEMPAK}

###################################
# Set up the UTILITIES
###################################
export EXECstofs=${EXECstofs:-$HOMEstofs/exec/${RUN}}
export FIXstofs=${FIXstofs:-$HOMEstofs/fix/${RUN}}
export PARMstofs=${PARMstofs:-$HOMEstofs/parm/${RUN}}
export SORCstofs=${SORCstofs:-$HOMEstofs/sorc/${RUN}}
export SCRIstofs=${SCRIstofs:-$HOMEstofs/scripts/${RUN}}
export USHstofs=${USHstofs:-$HOMEstofs/ush/${RUN}}
export GEMfix=${GEMfix:-$HOMEstofs/gempak/${RUN}/fix}

#Run setpdy and initialize PDY variables
setpdy.sh

. ./PDY

###############################################
# Define input and output com directories
###############################################
#export COM=${COM:-$(compath.py -o ${NET}/${stofs_ver})}
#export COMIN=${COMIN:-$(compath.py ${envir}/${NET}/${stofs_ver})/${RUN}.${PDY}}
#export COMOUT=${COMOUT:-$(compath.py -o ${NET}/${estofs_ver}/${RUN}.${PDY})}
#export COMOUTgempak=${COMOUTgempak:-${COMOUT}/gempak}
#mkdir -p -m 775 $COMOUT $COMOUTgempak

export ROOT=${ROOT:-${HOMEstofs}/com}
export COM=${COM:-${ROOT}/${NET}/v1.1}
export COMIN=${COMIN:-${COM}/${RUN}.${PDY}}
export COMOUT=${COMOUT:-${COM}/${RUN}.${PDY}}
export COMOUTgempak=${COMOUTgempak:-${COMOUT}/gempak}
mkdir -p -m 775 $COMOUT $COMOUTgempak

env
date

########################################################
# Execute the script.
if [ -f poescript ]; then
   rm -f poescript
fi

echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh conus.east" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh conus.east se" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh conus.east ne" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh conus.east gom" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh puertori" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh conus.west" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh alaska" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh hawaii" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh guam" >> poescript
echo "${SCRIstofs}/exstofs_2d_glo_gempak.sh northpacific" >> poescript

chmod 775 poescript
mpiexec -n 10 -ppn 10 --cpu-bind core cfp poescript
export err=$?; err_chk

########################################################

if [ -f $pgmout ]; then
    cat $pgmout
fi

postmsg $jlogfile "$0 completed normally"

cd $DATAROOT
if [ ${KEEPDATA}:-YES} = YES ] ; then rm -rf $DATA ; fi

date
