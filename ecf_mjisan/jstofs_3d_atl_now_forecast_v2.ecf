#!/bin/bash
#PBS -N stofs_3d_atl_nfcast
#PBS -S /bin/bash
#PBS -A ESTOFS-DEV
#PBS -q dev
#PBS -l walltime=4:00:00
#PBS -l place=vscatter:excl,select=36:ncpus=128:mpiprocs=120:ompthreads=1
#PBS -l debug=true


export NCPU_PBS=4320



# MPI efficiency settings
export MPICH_OFI_STARTUP_CONNECT=1
export MPICH_COLL_SYNC=MPI_Bcast
export MPICH_REDUCE_NO_SMP=1

export model=stofs
. /lfs/h1/nos/estofs/noscrub/mansur.jisan/packages/IT-stofs.v2.1.0/versions/stofs_3d_atl/run.ver

export model=stofs
export HOMEstofs=${HOMEstofs:-/lfs/h1/nos/estofs/noscrub/mansur.jisan/packages/IT-stofs.v2.1.0}
export DIR_ECF=${HOMEstofs}/ecf/3d_atl
export DIR_JOBS=${HOMEstofs}/jobs

# Create a timestamp for this run
timestamp=$(date +%Y%m%d_%H%M%S)
export JOB_LOG_DIR=${HOMEstofs}/logs/stofs_3d_atl/forecast_${timestamp}
mkdir -p ${JOB_LOG_DIR}

# Redirect all output to a log file
exec 1>${JOB_LOG_DIR}/job.log 2>&1

echo "=== Forecast Job Start: $(date) ==="
echo "Working directory: $(pwd)"
echo "User: $(whoami)"
echo "Host: $(hostname)"
echo "Job ID: $PBS_JOBID"

# Load required modules
module load intel/$intel_ver
module load PrgEnv-intel/$PrgEnv_intel_ver
module load craype/$craype_ver
module load cray-mpich/$cray_mpich_ver
module load cray-pals/$cray_pals_ver
module load hdf5/$hdf5_ver
module load netcdf/$netcdf_ver
module load jasper/$jasper_ver
module load udunits/$udunits_ver
module load zlib/$zlib_ver
module load bufr/$bufr_ver
module load g2/$g2_ver
module load w3nco/$w3nco_ver
module load w3emc/$w3emc_ver
module load subversion/${subversion_ver}
module unload python
module load ve/stofs/${ve_stofs}
module load cfp/${cfp_ver}
module load libjpeg/$libjpeg_ver
module load grib_util/${grib_util_ver}
module load gsl/${gsl_ver}
module load wgrib2/$wgrib2_ver
module load nco/${nco_ver}

module list

# Run the forecast job
${HOMEstofs}/jobs/JSTOFS_3D_ATL_NOW_FORECAST 2>&1 | tee -a ${JOB_LOG_DIR}/forecast.log

status=${PIPESTATUS[0]}
if [ $status -ne 0 ]; then
    echo "ERROR: JSTOFS_3D_ATL_NOW_FORECAST failed with status $status"
        exit $status
	fi

echo "=== Forecast Job End: $(date) ==="
echo "Log files available in: ${JOB_LOG_DIR}"
